<package version="1.0">
  <name>runkit</name>
  <summary>For all those things you.... probably shouldn't have been doing anyway....</summary>
  <description>Replace, rename, and remove user defined functions and classes.
Define customized superglobal variables for general purpose use.
Execute code in restricted environment (sandboxing).</description>
  <license>PHP</license>
  <maintainers>
    <maintainer>
      <user>pollita</user>
      <name>Sara Golemon</name>
      <email>pollita@php.net</email>
      <role>lead</role>
    </maintainer>
  </maintainers>

   <release>
    <version>0.9</version>
    <state>beta</state>
    <date>2006-06-06</date>
    <notes>Allow building part of runkit while leaving other functionality out.
--enable-runkit works as before, building all runkit features
Individual features may enabled or disable by using
--enable-runkit-featurename or --disbale-runkit-featurename
where featurename is any of:
    modify  - Runtime manipulation
    super   - Superglobal registration
    sandbox - Sandboxing

Ex: ./configure --enable-runkit --disable-runkit-modify
		Enable superglobal registration and sandbox support,
		but disable runtime manipulation.

    ./configure --disable-runkit --enable-runkit-sandbox
		Enable only sandboxing support.

This release also:
- Fixes PHP4 (ZE1) compilation
- Closes a potential crash-bug in runkit_import()
  handling of default properties
- Resolves an output buffering bug in Runkit_Sandbox
- Resolves Runkit_Sandbox failure when superglobals are defined
</notes>
   </release>

  <changelog>
   <release>
    <version>0.8.1</version>
    <state>beta</state>
    <date>2006-05-20</date>
    <notes>Added source file runkit_props.c to package</notes>
   </release>

   <release>
    <version>0.8</version>
    <state>beta</state>
    <date>2006-05-14</date>
    <notes>Fixed SAPI handlers for genuinely threaded webservers (e.g. apache2-worker)
Fixed internal pointer corruption in function/class popping
Added functions:
  runkit_zval_inspect()
  runkit_return_value_used()
  runkit_default_property_add()
Implemented class property importing in runkit_import()
Began refactor for PHP6 compatability</notes>
   </release>

   <release>
    <version>0.7</version>
    <state>beta</state>
    <date>2005-10-30</date>
    <notes>Primarily bugfix release, only new functionality is expanded parent_scope setting.

Workaround bug when using runkit_import() with opcode caches by bypassing cache for imported file.
Fix using runkit_import() with multiple classes (Thanks to Stuart Herbert for the patch)
Fix various reference issues for parameters passed to manipulation functions.
Fix C++ compatability in sandbox source files.
Fix parent_scope support (was only applied to property_read and eval/include/require ops)
Expand parent_scope setting to allow variable arrays as symbol tables.</notes>
   </release>

   <release>
    <version>0.6</version>
    <state>beta</state>
    <date>2005-09-30</date>
    <notes>Add ability to modify/rename/remove internal functions.
Requires PHP_INI_SYSTEM setting runkit.internal_override to be enabled.

Implement Runkit_Sandbox_Parent to give child access to parent's scope
Parent must enable $sandbox['parent_access'] at minimum.

Additional boolean settings include:
parent_read - Can read properties in parent_scope
parent_write - Can modify properties in parent_scope
parent_call - Can call parent's functions
parent_eval - Can eval arbitrary code in parent scope
parent_include - Can include/require code in parent scope
parent_echo - Can echo/print data (bypass output_handler)
parent_die - Can kill parent (commiting suicide in the process)

A special parent_scope setting modifies the active symbol table of the parent
as seen from the child according to:
0 = Global Scope
1 = Current active symbol table
2 = Previously active symbol table
3 = The one before that...etc...
</notes>
   </release>

   <release>
    <version>0.5</version>
    <state>beta</state>
    <date>2005-09-23</date>
    <notes>NOTICE: This release demotes runkit_sandbox_output_handler() to DEPRECATED.
Use $sandbox['output_handler'] = $handler; rather than
runkit_sandbox_output_handler($sandbox, $handler);
The procedural version will be removed prior to a 1.0-stable release.
Other changes include:
- Major refactor of Runkit_Sandbox OOP Model.
- Addition of $sandbox['active'] R/O status indicator.
- Fixed crash when multiple autoglobals are specified</notes>
   </release>

   <release>
    <version>0.4</version>
    <state>beta</state>
    <date>2005-07-08</date>
    <notes>Added runkit_object_id() -- Fetch object handle identifier
Fixed runkit_import() -- Fold case when adding method keys to ce->function_table
Fixed runkit_method_*() to properly return TRUE on success
Refactored INI overrides in Runkit_Sandbox for readability
Added INI overrides in Runkit_Sandbox (safe_mode_gid,safe_mode_include_dir)
Fixed callback parameter to runkit_sandbox_output_handler() to be optional.</notes>
   </release>

   <release>
    <version>0.3.0</version>
    <state>beta</state>
    <date>2005-06-03</date>
    <notes>Put php_runkit.h back into the package.xml file. (pear install runkit-beta should work now).
Implement die(), exit(), echo(), and print() and catch bailouts properly.
Implement output capturing -- runkit_sandbox_output_handler().</notes>
   </release>

   <release>
    <version>0.2.0</version>
    <state>beta</state>
    <date>2005-05-03</date>
    <notes>Numerous build fixes in older versions and Win32.
Fix registration of more than one superglobal.
Implement include(), require(), include_once(), require_once(), unset(), isset(), and empty() support in Runkit_Sandbox.
Add runkit.superglobal as "special" ini supported by Runkit_Sandbox.
Fix runkit_class_*.phpt regression tests to be version agnostic.</notes>
   </release>

   <release>
    <version>0.1.0</version>
    <state>beta</state>
    <date>2005-04-29</date>
    <notes>Initial Release</notes>
   </release>
  </changelog>

  <filelist>
   <file role="src" name="config.m4"/>
   <file role="src" name="config.w32"/>
   <file role="src" name="runkit.dsp"/>
   <file role="src" name="php_runkit.h"/>
   <file role="src" name="runkit.c"/>
   <file role="src" name="runkit_classes.c"/>
   <file role="src" name="runkit_constants.c"/>
   <file role="src" name="runkit_functions.c"/>
   <file role="src" name="runkit_import.c"/>
   <file role="src" name="runkit_methods.c"/>
   <file role="src" name="runkit_props.c"/>
   <file role="src" name="runkit_sandbox.c"/>
   <file role="src" name="runkit_sandbox_parent.c"/>
   <file role="doc" name="README"/>
   <file role="src" name="tsrm_5.0.diff"/>
   <dir role="test" name="tests">
    <file role="test" name="runkit_class_adopt.phpt"/>
    <file role="test" name="runkit_class_emancipate.phpt"/>
    <file role="test" name="runkit_constant_add.phpt"/>
    <file role="test" name="runkit_constant_redefine.phpt"/>
    <file role="test" name="runkit_constant_remove.phpt"/>
    <file role="test" name="runkit_function_add.phpt"/>
    <file role="test" name="runkit_function_copy.phpt"/>
    <file role="test" name="runkit_function_redefine.phpt"/>
    <file role="test" name="runkit_function_remove.phpt"/>
    <file role="test" name="runkit_function_rename.phpt"/>
    <file role="test" name="runkit_lint.phpt"/>
    <file role="test" name="runkit_method_add.phpt"/>
    <file role="test" name="runkit_method_copy.phpt"/>
    <file role="test" name="runkit_method_redefine.phpt"/>
    <file role="test" name="runkit_method_remove.phpt"/>
    <file role="test" name="runkit_method_rename.phpt"/>
    <file role="test" name="runkit_return_value_used.phpt"/>
    <file role="test" name="runkit_sandbox_output_handler.phpt"/>
    <file role="test" name="Runkit_Sandbox_.output_handler.phpt"/>
    <file role="test" name="Runkit_Sandbox_.active.phpt"/>
    <file rolw="test" name="Runkit_Sandbox__grandchild.phpt"/>
    <file role="test" name="Runkit_Sandbox__call.phpt"/>
    <file role="test" name="Runkit_Sandbox__die.phpt"/>
    <file role="test" name="Runkit_Sandbox__disable_functions.phpt"/>
    <file role="test" name="Runkit_Sandbox__disable_classes.phpt"/>
    <file role="test" name="Runkit_Sandbox__echo.phpt"/>
    <file role="test" name="Runkit_Sandbox__eval.phpt"/>
    <file role="test" name="Runkit_Sandbox__get.phpt"/>
    <file role="test" name="Runkit_Sandbox__set.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent1.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent2.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.call.access.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.call.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.die.access.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.die.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.echo.access.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.echo.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.eval.access.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.eval.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.read.access.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.read.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.scope.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.write.access.phpt"/>
    <file role="test" name="Runkit_Sandbox_Parent__.write.phpt"/>
   </dir>
  </filelist>

</package>
